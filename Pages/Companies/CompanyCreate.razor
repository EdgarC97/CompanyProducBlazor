@page "/companies/create"
@using CompanyProductBlazor.Models
@using CompanyProductBlazor.Models.DTOs
@using CompanyProductBlazor.Services.Interfaces
@inject ICompanyService CompanyService
@inject INotificationService NotificationService
@inject NavigationManager NavigationManager

<h1>Crear Nueva Compañía</h1>
<p class="text-muted mb-3"><span class="text-danger">*</span> Campos obligatorios</p>


<EditForm Model="@company" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label>Nombre <span class="text-danger">*</span></label>
        <InputText @bind-Value="company.Name" class="form-control" />
        <ValidationMessage For="@(() => company.Name)" />
    </div>

    <div class="form-group">
        <label>Dirección <span class="text-danger">*</span></label>
        <InputText @bind-Value="company.Address" class="form-control" />
        <ValidationMessage For="@(() => company.Address)" />
    </div>

    <div class="form-group">
        <label>Teléfono <span class="text-danger">*</span></label>
        <InputText type="tel" @bind-Value="company.Phone" class="form-control" />
        <ValidationMessage For="@(() => company.Phone)" />
    </div>

    <div class="form-group">
        <label>Email <span class="text-danger">*</span></label>
        <InputText type="email" @bind-Value="company.Email" class="form-control" />
        <ValidationMessage For="@(() => company.Email)" />
    </div>

    <div class="form-group">
        <label>Sitio Web <span class="text-danger">*</span></label>
        <InputText @bind-Value="company.WebSite" class="form-control" />
        <ValidationMessage For="@(() => company.WebSite)" />
    </div>

    <div class="mt-3">
        <button class="btn btn-primary" type="submit" disabled="@isSaving">
            @(isSaving ? "Guardando..." : "Guardar")
        </button>
        <button class="btn btn-secondary" type="button" @onclick="NavigateToList">Cancelar</button>
    </div>
</EditForm>


@code {
    private CompanyCreateDto company = new();
    private bool isSaving = false;

    private async Task HandleValidSubmit()
    {
        try
        {
            isSaving = true;
            await CompanyService.CreateCompanyAsync(company);
            NotificationService.ShowNotification("Éxito", "Compañía creada correctamente", NotificationType.Success);
            NavigateToList();
        }
        catch (Exception ex)
        {
            NotificationService.ShowNotification("Error", ex.Message, NotificationType.Error);
        }
        finally
        {
            isSaving = false;
        }
    }

    private void NavigateToList() => NavigationManager.NavigateTo("/companies");
}
